"""Create ModuleControl Tables

Revision ID: ba6a411625e6
Revises: 73b7c8349566
Create Date: 2023-07-19 14:32:04.100771

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ba6a411625e6'
down_revision = '73b7c8349566'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('question_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('test', 'test_with_photo', 'test_with_input', 'matching', 'open_question', name='questiontypeoption'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_question_type_id'), 'question_type', ['id'], unique=False)
    op.create_table('module_control',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('is_published', sa.Boolean(), nullable=False),
    sa.Column('set_timer', sa.Boolean(), nullable=False),
    sa.Column('timer', sa.Time(), nullable=True),
    sa.Column('attempts', sa.Integer(), nullable=False),
    sa.Column('max_score', sa.Integer(), nullable=True),
    sa.Column('module_id', sa.Integer(), nullable=True),
    sa.Column('lesson_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['lesson_id'], ['lesson.id'], ),
    sa.ForeignKeyConstraint(['module_id'], ['module.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_module_control_id'), 'module_control', ['id'], unique=False)
    op.create_table('student_additional_subject',
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.ForeignKeyConstraint(['subject_id'], ['subject.id'], ),
    sa.PrimaryKeyConstraint('subject_id', 'student_id')
    )
    op.create_table('module_question',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('question_number', sa.Integer(), nullable=False),
    sa.Column('question_text', sa.Text(), nullable=False),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.Column('module_control_id', sa.Integer(), nullable=True),
    sa.Column('question_type_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['module_control_id'], ['module_control.id'], ),
    sa.ForeignKeyConstraint(['question_type_id'], ['question_type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_module_question_id'), 'module_question', ['id'], unique=False)
    op.create_table('student_module',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('score', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('module_control_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['module_control_id'], ['module_control.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_student_module_id'), 'student_module', ['id'], unique=False)
    op.create_table('module_answer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('answer', sa.Text(), nullable=False),
    sa.Column('is_correct', sa.Boolean(), nullable=True),
    sa.Column('module_question_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['module_question_id'], ['module_question.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_module_answer_id'), 'module_answer', ['id'], unique=False)
    op.create_table('module_matching',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('left_option', sa.String(), nullable=False),
    sa.Column('right_option', sa.String(), nullable=False),
    sa.Column('module_question_id', sa.Integer(), nullable=True),
    sa.Column('correct_right_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['correct_right_id'], ['module_matching.id'], ),
    sa.ForeignKeyConstraint(['module_question_id'], ['module_question.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_module_matching_id'), 'module_matching', ['id'], unique=False)
    op.create_table('student_answer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('score', sa.Integer(), nullable=False),
    sa.Column('answer', sa.Text(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('module_question_id', sa.Integer(), nullable=False),
    sa.Column('student_module_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['module_question_id'], ['module_question.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.ForeignKeyConstraint(['student_module_id'], ['student_module.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_student_answer_id'), 'student_answer', ['id'], unique=False)
    op.create_table('student_matching',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('score', sa.Integer(), nullable=False),
    sa.Column('left_option', sa.String(), nullable=False),
    sa.Column('right_option', sa.String(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('module_question_id', sa.Integer(), nullable=False),
    sa.Column('student_module_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['module_question_id'], ['module_question.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.ForeignKeyConstraint(['student_module_id'], ['student_module.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_student_matching_id'), 'student_matching', ['id'], unique=False)
    op.drop_index('ix_session_id', table_name='session')
    op.drop_table('session')
    op.add_column('student', sa.Column('date_added', sa.Date(), autoincrement=True, nullable=False))
    op.add_column('subject', sa.Column('exam_date', sa.Date(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('subject', 'exam_date')
    op.drop_column('student', 'date_added')
    op.create_table('session',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('session_date', sa.DATE(), nullable=True),
    sa.Column('passed', sa.BOOLEAN(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_session_id', 'session', ['id'], unique=False)
    op.drop_index(op.f('ix_student_matching_id'), table_name='student_matching')
    op.drop_table('student_matching')
    op.drop_index(op.f('ix_student_answer_id'), table_name='student_answer')
    op.drop_table('student_answer')
    op.drop_index(op.f('ix_module_matching_id'), table_name='module_matching')
    op.drop_table('module_matching')
    op.drop_index(op.f('ix_module_answer_id'), table_name='module_answer')
    op.drop_table('module_answer')
    op.drop_index(op.f('ix_student_module_id'), table_name='student_module')
    op.drop_table('student_module')
    op.drop_index(op.f('ix_module_question_id'), table_name='module_question')
    op.drop_table('module_question')
    op.drop_table('student_additional_subject')
    op.drop_index(op.f('ix_module_control_id'), table_name='module_control')
    op.drop_table('module_control')
    op.drop_index(op.f('ix_question_type_id'), table_name='question_type')
    op.drop_table('question_type')
    # ### end Alembic commands ###
